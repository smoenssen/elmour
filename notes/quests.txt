

Map
QUEST_DISCOVER_LAYER
QUEST_ITEM_SPAWN_LAYER

Quest map object:
questID is the object name on the map - all objects of the same quest will have the same questID
taskID is a custom property that matches id of task in .json file

taskProperties:
TARGET_TYPE is path to .json config file (for RETURN quests or FETCH type quests on QUEST_ITEM_SPAWN_LAYER)
TARGET_LOCATION is name of map

Questions:
Should we have a split window for Quest and associated quest tasks to show what has been done and what still needs to be done?


----------------------------------------
if quest hasn't started {
	Check what chapter player is on
	if current chapter < minimum chapter {
		display normal dialog
	}
	else {
		display pre-quest specific cut scene
		if player accepts quest
			start quest
	}
}
else if quest is active {
	if player talks to quest giver {
		display quest specific dialog
	}

	if player talks to other person involved with quest {
		display quest specific dialog or cut scene
	}
}
else if quest has completed {
	if player talks to quest giver or other person that was involved with quest {
		display special post-quest dialog
}
----------------------------------------

----------------------------------------

****** PROFILE
****** save quests that are in progress or complete along with their tasks
****** save latest config TYPE for each NPC


Check for an available quest task (function)
if there are no available quest tasks {
	get the latest config TYPE from profile
	if there is a type found in profile {
		set to config type to what was found in profile
	}
	else {
		set type to the original NORMAL_DIALOG
	}
}
else {

}

Get current chapter of player
Get all possible questID : taskID lists for the NPC interacted with

for each questID {
	// first deal with quests that are complete or in progress
	if this questID is complete {
		set to POST_QUEST_DIALOG
	}
	else if this questID is in progress {
		for each taskID for this questID {
			if this taskID has not been started {
				set to QUEST_TASK_DIALOG or QUEST_TASK_CUTSCENE
				set taskID to started (not sure to do this here or elsewhere)
			}
			else {
				set to ACTIVE_QUEST_DIALOG or ACTIVE_QUEST_CUTSCENE
			}
		}
	}
	
	if current chapter < minimum chapter {
		set to NORMAL_DIALOG
	}
	else 
}
----------------------------------------

Notes:
Need to support more than one quest being active at a time, but only one quest per NPC
Need to keep track of current quest ID with each NPC in profile manager.
Remove conversationConfigPath from EntityConfig because conversationConfigs array is now used.
Remove questConfigPath from EntityConfig because this will be sent in from cut scene.
When ACCEPT_QUEST is received, that's when questConfigPath is loaded.
Whenever quest status changes, updateEntityObservers() needs to be called.
Need to add dependencies between quests.

To add quest:
Create CutSceneQuest<name> copy of CutSceneQuest1
  Update all instances of CutSceneQuest1
  Update questID and questGiver
  Update ElmourGame.ScreenType.*
  Update MapFactory.MapType in show()
  Update .json file paths for conversations
ElmourGame
  Add private static variables
  Create new in create()
  Add to dispose()
  Add ScreenType
  Add case in getScreenType

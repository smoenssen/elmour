

Map
QUEST_DISCOVER_LAYER
QUEST_ITEM_SPAWN_LAYER

Quest map object:
questID is the object name on the map - all objects of the same quest will have the same questID
taskID is a custom property that matches id of task in .json file

taskProperties:
TARGET_TYPE is path to .json config file (for RETURN quests or FETCH type quests on QUEST_ITEM_SPAWN_LAYER)
TARGET_LOCATION is name of map

Questions:
Should we have a split window for Quest and associated quest tasks to show what has been done and what still needs to be done?


----------------------------------------
if quest hasn't started {
	Check what chapter player is on
	if current chapter < minimum chapter {
		display normal dialog
	}
	else {
		display pre-quest specific cut scene
		if player accepts quest
			start quest
	}
}
else if quest is active {
	if player talks to quest giver {
		display quest specific dialog
	}

	if player talks to other person involved with quest {
		display quest specific dialog or cut scene
	}
}
else if quest has completed {
	if player talks to quest giver or other person that was involved with quest {
		display special post-quest dialog
}
----------------------------------------

Notes:
Need to support more than one quest being active at a time, but only one quest per NPC
Need to keep track of current quest ID with each NPC in profile manager. (remove this from EntityConfig)
Remove questConfigPaths?
When ACCEPT_QUEST is received, that's when questConfigPath is loaded. Need to combine this with EXIT_CUTSCENE.

To add quest:
Create CutSceneQuest<name> copy of CutSceneQuest1
  Update all instances of CutSceneQuest1
  Update ElmourGame.ScreenType.*
  Update MapFactory.MapType in show()
ElmourGame
  Add private static variables
  Create new in create()
  Add to dispose()
  Add ScreenType
  Add case in getScreenType

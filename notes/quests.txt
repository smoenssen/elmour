

Map
QUEST_DISCOVER_LAYER
QUEST_ITEM_SPAWN_LAYER

Quest map object:
questID is the object name on the map - all objects of the same quest will have the same questID
taskID is a custom property that matches id of task in .json file

taskProperties:
TARGET_TYPE is path to .json config file (for RETURN quests or FETCH type quests on QUEST_ITEM_SPAWN_LAYER)
TARGET_LOCATION is name of map

Questions:
We need a split window for Quest and associated quest tasks to show what has been done and what still needs to be done.
Where will this be launched from?
Do we need a QuestItem class to define quest items that will be displayed in inventory? Will there be sprites for them?
What are non-quest items?

Quest Thunder
-------------
Only show tasks that are available
Then show tasks in the order they have been completed
Allow sorting of quests by order obtained or alphabetical (arrows?)
Allow filtering of completed/not completed
Task list should be wrappable and bullet list

****** PROFILE
****** save full quest graphs that are in progress
****** save quests that are complete just as questIDs
****** save latest config TYPE for each NPC


Notes:
DONE - Need to support more than one quest being active at a time, but only one open quest per NPC
DONE - Need to keep track of current quest ID with each NPC in profile manager.
DONE - Remove conversationConfigPath from EntityConfig because conversationConfigs array is now used.
DONE - Remove questConfigPath from EntityConfig because this will be handled in QuestList
DONE - Remove currentQuestID from EntityConfig
Whenever quest status changes, updateEntityObservers() needs to be called (?)
DONE - Need to add dependencies between quests.
DONE - On map, NPC spawn locations will have a chapters range that it can spawn.
Remove targetLocation from QuestTask?
Rename targetType to targetEntity?
DONE - Add chapter range to normal dialog

Ben
---
Remove the following from .json files for characters:
	conversationConfigPath
	questConfigPath
	currentQuestID

To add quest
------------
Create CutSceneQuest<name> copy of CutSceneQuest1
  Update all instances of CutSceneQuest1
  Update questID and questGiver
  Update ElmourGame.ScreenType.*
  Update MapFactory.MapType in show()
  Update .json file paths for conversations
ElmourGame
  Add private static variables
  Create new in create()
  Add to dispose()
  Add ScreenType
  Add case in getScreenType

Map
---
	- For quests launched by interacting with NPC
		Add character spawn object on SPAWNS_LAYER
		Add "chapters" under Custom Properties - this is the chapter range for quest, e.g., 1-5
		Add "taskIDs" under Custom Properties - this is the list of quest tasks in the form <Quest ID>::<Task ID list separated by commas>
			The QuestID::TaskID lists are separated by semi-colons
			e.g., TeddyBear::FindTeddyBear,AnotherTeddyBearTask;AnotherQuestID::YetAnotherTask
	- For quests launched by discovering a map area
		Add object to MAP_QUEST_DISCOVER_LAYER
		Add "chapters" and "taskIDs" under Custom Properties (see above)

yEd for quest conversations
---------------------------
  Use EXIT_CONVERSATION in cut scenes
  Use EXIT_CHAT in normal dialog
  Use TASK_COMPLETE in task dialog, which includes data <questID::taskID>

Character .json files
---------------------
	Remove conversationConfigPath
	Remove questConfigPath
	Add all possible conversationConfigs for quests. Possible conversation types for configs so far are:
		NORMAL_DIALOG,
		PRE_QUEST_CUTSCENE,
		QUEST_TASK_DIALOG,
		QUEST_TASK_CUTSCENE,
		ACTIVE_QUEST_DIALOG,
		ACTIVE_QUEST_CUTSCENE,
		RETURN_QUEST_DIALOG,
		RETURN_QUEST_CUTSCENE,
		POST_QUEST_DIALOG

Example conversationConfigs in timmy.json file:
	conversationConfigs : [
		{
			class: com.smoftware.elmour.EntityConfig$ConversationConfig
			type: NORMAL_DIALOG
			config: "RPGGame/maps/Game/Text/Dialog/NormalDialog/TimmyNormalDialog.json"
			questID: TeddyBear
		}
		{
			class: com.smoftware.elmour.EntityConfig$ConversationConfig
			type: PRE_QUEST_CUTSCENE
			config: "Quest1Screen_PreQuestTimmy"
			questID: TeddyBear
		}
		{
			class: com.smoftware.elmour.EntityConfig$ConversationConfig
			type: ACTIVE_QUEST_DIALOG
			config: "RPGGame/maps/Game/Text/Dialog/TeddyBear/TimmyActiveQuestDialog.json"
			questID: TeddyBear
		}
		{
			class: com.smoftware.elmour.EntityConfig$ConversationConfig
			type: RETURN_QUEST_CUTSCENE
			config: "Quest1Screen_ReturnQuestTimmy"
			questID: TeddyBear
		}
		{
			class: com.smoftware.elmour.EntityConfig$ConversationConfig
			type: POST_QUEST_DIALOG
			config: "RPGGame/maps/Game/Text/Dialog/TeddyBear/TimmyPostQuestDialog.json"
			questID: TeddyBear
		}
	]

yEd for quest graphs
--------------------
Color = task types
	FETCH			= cc99ff
	KILL			= ff0000
	DELIVERY	= c0c0c0
	GUARD			= 3366ff
	ESCORT		= 33cccc
	RETURN		= ffcc00
	DISCOVER	= 00ff00
Text = task ID
Phrase = URL
Description will be <Target Type>;<Target Location>;<Target Number>

Quests will be Groups
URL = Quest Title
Text = Quest ID
Description = <Minimum chapter>;<Quest giver>;<Gold>;<XP>
